# The GitHub Actions docs (https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on)
# describe other options for 'on', 'pull_request' is a good default.
on:
 push:
   branches:
   - main
   paths:
   - terraform/**
 pull_request:
   branches:
   - main
   paths:
   - terraform/**

jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: checkout_repo
        uses: actions/checkout@v3
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
         terraform_version: 1.6.0
      - name: Setup JQ
        uses: dcarbone/install-jq-action@v2 
        with: 
          version: '1.7'
      # Checkout the base branch of the pull request (e.g. main/master).
      - name: Setup terraform-config-inspect-action
        uses: clingclangclick/terraform-config-inspect-action@v0
        id: tf-config-inspect
        with:
          path: terraform/prod
      - name: save output
        run: |
            echo ' \
            #/bin/bash

            IFS=' ' read -a arr <<< "${{ vars.TF_STANDARD_MODULE_LIST }}" 

            FLAG="false"

            REPO_MODULES=$(echo '${{ steps.tf-config-inspect.outputs.config }}' | jq -r -c .module_calls[].source)
        
            echo Checking against the following standard modules: "${arr[@]}"

            for userModule in $REPO_MODULES 
            do 
                echo checking user provided "$userModule"
                for standardModule in "${arr[@]}"
                do
                    baseModule=${userModule%\?*}
                    echo extracting base module: "$baseModule"
                    if [[ $baseModule == $standardModule ]]; then 
                        FLAG="true"
                        echo found match for "$baseModule"
                        break 
                    fi
                    FLAG="false"
                done
            done
            if [[ $FLAG == "false" ]]; then 
                echo One or more user provided modules are not using the standard modules... exiting
                exit 1;
            fi' | exec.sh 
      - name: exec check 
        run: ./exec.sh  
                    